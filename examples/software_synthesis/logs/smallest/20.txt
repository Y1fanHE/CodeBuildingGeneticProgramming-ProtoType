Gen		Median		MAD		Best		Div		Run Best		Code
1		5745.0		3332		0.118		3332		float2int(print_tap(min_(not_(True), input3)))
2		4964.0		2035		0.092		2035		float2int(print_tap(min_(print_do(input4, not_(True)), input3)))
3		4655.0		1649		0.13		1649		float2int(print_tap(min_(input3, input2)))
4		2586.0		878		0.112		878		float2int(min_(input3, min_(input1, input4)))
5		2474.0		878		0.151		878		float2int(min_(input3, min_(input1, input4)))
6		2275.0		0		0.19		0		float2int(min_(input3, min_(input1, min_(input2, input4))))
Solution found.
def smallest(input1, input2, input3, input4):
    return float2int(min_(input3, min_(input1, min_(input2, input4))))

Simplifying genome of length 71.
Simplified genome: length=71 error=0
def smallest(input1, input2, input3, input4):
    return float2int(min_(input3, min_(input1, min_(input2, input4))))

[0 0 0 ... 0 0 0]
Final Test Error: 0
