Gen		Median		MAD		Best		Div		Run Best		Code
1		5281.0		3249		0.117		3249		print_tap(min_(input2, -1))
2		4680.0		1838		0.123		1838		min_(input4, input1)
3		3445.0		1829		0.102		1829		min_(min_(len_(print_do(0, println_tap(str_(add(66, 0.005978401349018281))).upper().lower().capitalize())), input4), input1)
4		3028.5		780		0.116		780		min_(input4, min_(input1, input2))
5		2317.0		780		0.123		780		min_(input4, min_(input1, input2))
6		1995.0		780		0.106		780		min_(input4, min_(input1, input2))
7		2008.0		780		0.108		780		min_(input4, min_(input1, input2))
8		1838.0		0		0.109		0		min_(print_tap(input4), min_(input1, min_(input3, input2)))
Solution found.
def smallest(input1, input2, input3, input4):
    return min_(print_tap(input4), min_(input1, min_(input3, input2)))

Simplifying genome of length 51.
Simplified genome: length=51 error=0
def smallest(input1, input2, input3, input4):
    return min_(print_tap(input4), min_(input1, min_(input3, input2)))

[0 0 0 ... 0 0 0]
Final Test Error: 0
