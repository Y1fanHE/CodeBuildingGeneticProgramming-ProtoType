Gen		Median		MAD		Best		Div		Run Best		Code
1		5391.0		2907		0.116		2907		min_(input2, print_tap(1))
2		4403.0		1907		0.096		1907		print_do(print_do(min_(input2, input4), 1), ne(mul(2, 10), int2bool(neg(float2bool(input1)))))
3		4403.0		1583		0.142		1583		float2int(print_do(pos(min_(mul(True, input4), input3)), pos(-1)))
4		4369.0		1583		0.155		1583		float2int(print_do(pos(min_(mul(True, input4), input3)), pos(-1)))
5		4369.0		828		0.163		828		print_do(min_(input2, print_do(min_(input4, input1), 1)), ne(min_(int2float(2), 10), int2bool(float2bool(input1))))
6		4369.0		828		0.172		828		print_do(min_(input2, print_do(min_(input4, input1), 1)), ne(min_(int2float(2), 10), int2bool(float2bool(input1))))
7		4369.0		543		0.178		543		min_(print_do(print_tap(min_(input4, input1)), 1), input3)
8		4403.0		0		0.156		0		print_do(min_(input2, min_(print_do(min_(input4, input1), 1), input3)), float2bool(input1))
Solution found.
def smallest(input1, input2, input3, input4):
    return print_do(min_(input2, min_(print_do(min_(input4, input1), 1), input3)), float2bool(input1))

Simplifying genome of length 34.
Simplified genome: length=34 error=0
def smallest(input1, input2, input3, input4):
    return print_do(min_(input2, min_(print_do(min_(input4, input1), 1), input3)), float2bool(input1))

[0 0 0 ... 0 0 0]
Final Test Error: 0
