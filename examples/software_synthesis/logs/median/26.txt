Gen		Median		MAD		Best		Div		Run Best		Code
1		4297.0		2038		0.105		2038		input3
2		3183.0		2038		0.075		2038		input3
3		3064.0		2038		0.088		2038		input3
4		2926.0		2038		0.131		2038		input3
5		2816.0		1943		0.152		1943		float2int(min_(mul(input3, int2float(float2int(1))), abs_(floordiv(input2, int2float(neg(float2int(bool2float(ge(abs_(0.9038963403730774), str_(True).isnumeric())))))))))
6		2926.0		1940		0.178		1940		float2int(min_(mul(pos(input3), int2float(float2int(1))), sub(abs_(input2), int2float(neg(float2int(bool2float(ge(abs_(pos(0.9038963403730774)), str_(True).isnumeric()))))))))
7		3013.0		1748		0.211		1748		float2int(min_(mul(input3, int2float(float2int(1))), sub(abs_(input1), floordiv(input2, int2float(neg(float2int(bool2float(ge(-88, 0.9038963403730774)))))))))
8		3013.0		1748		0.217		1748		float2int(min_(mul(input3, int2float(float2int(1))), sub(abs_(input1), floordiv(input2, int2float(neg(float2int(bool2float(ge(-88, 0.9038963403730774)))))))))
9		3205.0		1748		0.248		1748		float2int(min_(mul(input3, int2float(float2int(1))), sub(abs_(input1), floordiv(input2, int2float(neg(float2int(bool2float(ge(-88, 0.9038963403730774)))))))))
10		2926.0		1337		0.24		1337		float2int(min_(max_(input2, input3), print_do(abs_(max_(sub(21, max_(mul(not_(eq(bool2float(ge(bool2float(True), mul(abs_(float2bool(10)), False))), input1)), 1), input1)), input1)), 10)))
11		2840.0		1239		0.284		1239		float2int(float2int(min_(max_(input2, input3), print_do(abs_(max_(bool2float(ge(bool2float(True), mul(abs_(float2bool(input1)), False))), input1)), 10))))
12		2962.0		1114		0.346		1114		println_tap(float2int(pos(max_(min_(input1, input3), float2int(input2)))))
13		3216.0		962		0.369		962		println_tap(float2int(pos(max_(min_(input1, input3), float2int(min_(input2, input3))))))
14		3066.0		962		0.323		962		println_tap(float2int(pos(max_(min_(input1, input3), float2int(min_(input2, input3))))))
15		2824.0		962		0.33		962		println_tap(float2int(pos(max_(min_(input1, input3), float2int(min_(input2, input3))))))
16		2919.0		962		0.312		962		println_tap(float2int(pos(max_(min_(input1, input3), float2int(min_(input2, input3))))))
17		2800.0		714		0.322		714		println_tap(float2int(pos(max_(min_(input1, input3), min_(input2, abs_(input3))))))
18		2804.0		714		0.327		714		println_tap(float2int(pos(max_(min_(input1, input3), min_(input2, abs_(input3))))))
19		2809.0		714		0.312		714		println_tap(float2int(pos(max_(min_(input1, input3), min_(input2, abs_(input3))))))
20		3064.0		714		0.322		714		println_tap(float2int(pos(max_(min_(input1, input3), min_(input2, abs_(input3))))))
21		2841.5		714		0.325		714		println_tap(float2int(pos(max_(min_(input1, input3), min_(input2, abs_(input3))))))
22		2800.0		714		0.321		714		println_tap(float2int(pos(max_(min_(input1, input3), min_(input2, abs_(input3))))))
23		2823.5		714		0.315		714		println_tap(float2int(pos(max_(min_(input1, input3), min_(input2, abs_(input3))))))
24		2772.0		714		0.338		714		println_tap(float2int(pos(max_(min_(input1, input3), min_(input2, abs_(input3))))))
25		3064.0		714		0.348		714		println_tap(float2int(pos(max_(min_(input1, input3), min_(input2, abs_(input3))))))
26		2800.0		714		0.321		714		println_tap(float2int(pos(max_(min_(input1, input3), min_(input2, abs_(input3))))))
27		2772.0		714		0.311		714		println_tap(float2int(pos(max_(min_(input1, input3), min_(input2, abs_(input3))))))
28		2839.5		714		0.321		714		println_tap(float2int(pos(max_(min_(input1, input3), min_(input2, abs_(input3))))))
29		2772.0		714		0.326		714		println_tap(float2int(pos(max_(min_(input1, input3), min_(input2, abs_(input3))))))
30		3064.0		714		0.327		714		println_tap(float2int(pos(max_(min_(input1, input3), min_(input2, abs_(input3))))))
31		2800.0		714		0.309		714		println_tap(float2int(pos(max_(min_(input1, input3), min_(input2, abs_(input3))))))
32		2911.0		714		0.317		714		println_tap(float2int(pos(max_(min_(input1, input3), min_(input2, abs_(input3))))))
33		2935.5		714		0.33		714		println_tap(float2int(pos(max_(min_(input1, input3), min_(input2, abs_(input3))))))
34		2950.5		714		0.318		714		println_tap(float2int(pos(max_(min_(input1, input3), min_(input2, abs_(input3))))))
35		2741.0		714		0.309		714		println_tap(float2int(pos(max_(min_(input1, input3), min_(input2, abs_(input3))))))
36		2848.0		714		0.357		714		println_tap(float2int(pos(max_(min_(input1, input3), min_(input2, abs_(input3))))))
37		2862.0		714		0.34		714		println_tap(float2int(pos(max_(min_(input1, input3), min_(input2, abs_(input3))))))
38		2735.0		714		0.346		714		println_tap(float2int(pos(max_(min_(input1, input3), min_(input2, abs_(input3))))))
39		2916.5		0		0.354		0		float2int(min_(max_(int2float(input2), input3), float2int(max_(input1, float2int(pos(min_(input3, float2int(input2))))))))
Solution found.
def median(input1, input2, input3):
    return float2int(min_(max_(int2float(input2), input3), float2int(max_(input1, float2int(pos(min_(input3, float2int(input2))))))))

Simplifying genome of length 57.
Simplified genome: length=57 error=0
def median(input1, input2, input3):
    return float2int(min_(max_(int2float(input2), input3), float2int(max_(input1, float2int(pos(min_(input3, float2int(input2))))))))

[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0]
Final Test Error: 0
