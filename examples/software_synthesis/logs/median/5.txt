Gen		Median		MAD		Best		Div		Run Best		Code
1		4435.0		2162		0.1		2162		input1
2		2397.0		1706		0.089		1706		max_(min_(-1, input1), input3)
3		2448.0		1645		0.095		1645		max_(do_print(min_(print_tap(-8), input2), pos(True)), print_tap(input1))
4		2448.0		758		0.13		758		max_(min_(print_do(input2, -1), input1), input3)
5		2448.0		758		0.153		758		max_(min_(print_do(input2, -1), input1), input3)
6		2289.0		758		0.163		758		max_(min_(print_do(input2, -1), input1), input3)
7		2201.0		758		0.166		758		max_(min_(print_do(input2, -1), input1), input3)
8		2162.0		758		0.161		758		max_(min_(print_do(input2, -1), input1), input3)
9		2162.0		758		0.151		758		max_(min_(print_do(input2, -1), input1), input3)
10		2162.0		758		0.173		758		max_(min_(print_do(input2, -1), input1), input3)
11		2289.0		758		0.177		758		max_(min_(print_do(input2, -1), input1), input3)
12		2286.5		758		0.201		758		max_(min_(print_do(input2, -1), input1), input3)
13		2278.5		758		0.194		758		max_(min_(print_do(input2, -1), input1), input3)
14		2289.0		758		0.196		758		max_(min_(print_do(input2, -1), input1), input3)
15		2369.0		758		0.183		758		max_(min_(print_do(input2, -1), input1), input3)
16		2289.0		758		0.181		758		max_(min_(print_do(input2, -1), input1), input3)
17		2397.0		758		0.206		758		max_(min_(print_do(input2, -1), input1), input3)
18		2397.0		758		0.179		758		max_(min_(print_do(input2, -1), input1), input3)
19		2289.0		758		0.195		758		max_(min_(print_do(input2, -1), input1), input3)
20		2393.0		758		0.192		758		max_(min_(print_do(input2, -1), input1), input3)
21		2289.0		758		0.185		758		max_(min_(print_do(input2, -1), input1), input3)
22		2448.0		758		0.21		758		max_(min_(print_do(input2, -1), input1), input3)
23		2448.0		758		0.209		758		max_(min_(print_do(input2, -1), input1), input3)
24		2306.0		758		0.206		758		max_(min_(print_do(input2, -1), input1), input3)
25		2448.0		758		0.2		758		max_(min_(print_do(input2, -1), input1), input3)
26		2448.0		758		0.2		758		max_(min_(print_do(input2, -1), input1), input3)
27		2397.0		758		0.203		758		max_(min_(print_do(input2, -1), input1), input3)
28		2397.0		758		0.188		758		max_(min_(print_do(input2, -1), input1), input3)
29		2448.0		758		0.188		758		max_(min_(print_do(input2, -1), input1), input3)
30		2448.0		758		0.188		758		max_(min_(print_do(input2, -1), input1), input3)
31		2397.0		758		0.199		758		max_(min_(print_do(input2, -1), input1), input3)
32		2416.0		758		0.191		758		max_(min_(print_do(input2, -1), input1), input3)
33		2289.0		758		0.168		758		max_(min_(print_do(input2, -1), input1), input3)
34		2290.0		758		0.185		758		max_(min_(print_do(input2, -1), input1), input3)
35		2289.0		758		0.198		758		max_(min_(print_do(input2, -1), input1), input3)
36		2397.0		758		0.176		758		max_(min_(print_do(input2, -1), input1), input3)
37		2289.0		758		0.161		758		max_(min_(print_do(input2, -1), input1), input3)
38		2397.0		758		0.155		758		max_(min_(print_do(input2, -1), input1), input3)
39		2162.0		758		0.179		758		max_(min_(print_do(input2, -1), input1), input3)
40		2180.0		758		0.184		758		max_(min_(print_do(input2, -1), input1), input3)
41		2162.0		758		0.192		758		max_(min_(print_do(input2, -1), input1), input3)
42		2394.0		758		0.201		758		max_(min_(print_do(input2, -1), input1), input3)
43		2289.0		758		0.18		758		max_(min_(print_do(input2, -1), input1), input3)
44		2290.0		758		0.203		758		max_(min_(print_do(input2, -1), input1), input3)
45		2162.0		758		0.174		758		max_(min_(print_do(input2, -1), input1), input3)
46		2162.0		758		0.195		758		max_(min_(print_do(input2, -1), input1), input3)
47		2111.0		758		0.201		758		max_(min_(print_do(input2, -1), input1), input3)
48		2162.0		758		0.172		758		max_(min_(print_do(input2, -1), input1), input3)
49		2289.0		758		0.174		758		max_(min_(print_do(input2, -1), input1), input3)
50		2289.0		758		0.211		758		max_(min_(print_do(input2, -1), input1), input3)
51		2397.0		758		0.214		758		max_(min_(print_do(input2, -1), input1), input3)
52		2193.0		758		0.192		758		max_(min_(print_do(input2, -1), input1), input3)
53		2289.0		758		0.198		758		max_(min_(print_do(input2, -1), input1), input3)
54		2289.0		758		0.202		758		max_(min_(print_do(input2, -1), input1), input3)
55		2263.5		758		0.182		758		max_(min_(print_do(input2, -1), input1), input3)
56		2278.5		758		0.189		758		max_(min_(print_do(input2, -1), input1), input3)
57		2289.0		758		0.186		758		max_(min_(print_do(input2, -1), input1), input3)
58		2162.0		758		0.189		758		max_(min_(print_do(input2, -1), input1), input3)
59		2289.0		758		0.214		758		max_(min_(print_do(input2, -1), input1), input3)
60		2289.0		758		0.203		758		max_(min_(print_do(input2, -1), input1), input3)
61		2289.0		758		0.201		758		max_(min_(print_do(input2, -1), input1), input3)
62		2397.0		758		0.21		758		max_(min_(print_do(input2, -1), input1), input3)
63		2162.0		758		0.193		758		max_(min_(print_do(input2, -1), input1), input3)
64		2162.0		747		0.199		747		max_(println_tap(min_(input2, pos(input1))), pos(min_(input3, 78)))
65		2397.0		747		0.218		747		max_(println_tap(min_(input2, pos(input1))), pos(min_(input3, 78)))
66		2242.5		747		0.221		747		max_(println_tap(min_(input2, pos(input1))), pos(min_(input3, 78)))
67		2289.0		747		0.211		747		max_(println_tap(min_(input2, pos(input1))), pos(min_(input3, 78)))
68		2289.0		747		0.202		747		max_(println_tap(min_(input2, pos(input1))), pos(min_(input3, 78)))
69		2185.5		747		0.223		747		max_(println_tap(min_(input2, pos(input1))), pos(min_(input3, 78)))
70		2289.0		747		0.219		747		max_(println_tap(min_(input2, pos(input1))), pos(min_(input3, 78)))
71		2289.0		747		0.228		747		max_(println_tap(min_(input2, pos(input1))), pos(min_(input3, 78)))
72		2289.0		747		0.221		747		max_(println_tap(min_(input2, pos(input1))), pos(min_(input3, 78)))
73		2289.0		747		0.241		747		max_(println_tap(min_(input2, pos(input1))), pos(min_(input3, 78)))
74		2162.0		747		0.214		747		max_(println_tap(min_(input2, pos(input1))), pos(min_(input3, 78)))
75		2162.0		747		0.223		747		max_(println_tap(min_(input2, pos(input1))), pos(min_(input3, 78)))
76		2289.0		713		0.239		713		do_print(max_(println_tap(min_(input2, input1)), min_(input3, max_(input1, 78))), 0.6377990217755305)
77		2446.5		666		0.227		666		max_(println_tap(min_(input2, input1)), min_(input3, max_(input1, -1)))
78		2397.0		664		0.232		664		max_(println_tap(min_(input2, input1)), min_(input3, max_(input1, add(-1, 69))))
79		2332.5		664		0.233		664		max_(println_tap(min_(input2, input1)), min_(input3, max_(input1, add(-1, 69))))
80		2448.0		0		0.248		0		max_(println_tap(min_(input2, input1)), min_(input3, max_(input1, input2)))
Solution found.
def median(input1, input2, input3):
    return max_(println_tap(min_(input2, input1)), min_(input3, max_(input1, input2)))

Simplifying genome of length 63.
Simplified genome: length=63 error=0
def median(input1, input2, input3):
    return max_(println_tap(min_(input2, input1)), min_(input3, max_(input1, input2)))

[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0]
Final Test Error: 0
