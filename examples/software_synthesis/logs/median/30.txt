Gen		Median		MAD		Best		Div		Run Best		Code
1		4487.0		2472		0.1		2472		max_(input1, input2)
2		3229.0		2472		0.088		2472		max_(input1, input2)
3		3229.0		2202		0.091		2202		max_(float2int(min_(input1, bool2float(abs_(gt(-13, -1))))), input2)
4		3229.0		2202		0.125		2202		max_(float2int(min_(input1, bool2float(abs_(gt(-13, -1))))), input2)
5		2813.5		1637		0.149		1637		float2int(max_(input1, min_(input2, input3)))
6		2735.0		1637		0.173		1637		float2int(max_(input1, min_(input2, input3)))
7		2735.0		1637		0.186		1637		float2int(max_(input1, min_(input2, input3)))
8		2804.0		1637		0.186		1637		float2int(max_(input1, min_(input2, input3)))
9		2804.0		1637		0.179		1637		float2int(max_(input1, min_(input2, input3)))
10		2906.0		1098		0.179		1098		min_(max_(input3, input2), input1)
11		2762.0		1098		0.171		1098		min_(max_(input3, input2), input1)
12		2735.0		1098		0.178		1098		min_(max_(input3, input2), input1)
13		2735.0		1098		0.183		1098		min_(max_(input3, input2), input1)
14		2541.0		1098		0.165		1098		min_(max_(input3, input2), input1)
15		2495.0		1098		0.157		1098		min_(max_(input3, input2), input1)
16		2495.0		1098		0.165		1098		min_(max_(input3, input2), input1)
17		2495.0		835		0.192		835		max_(input2, min_(input1, input3))
18		2470.0		835		0.142		835		max_(input2, min_(input1, input3))
19		2465.0		835		0.155		835		max_(input2, min_(input1, input3))
20		2472.0		835		0.162		835		max_(input2, min_(input1, input3))
21		2470.0		835		0.158		835		max_(input2, min_(input1, input3))
22		2465.0		835		0.171		835		max_(input2, min_(input1, input3))
23		2379.0		835		0.158		835		max_(input2, min_(input1, input3))
24		2239.0		835		0.152		835		max_(input2, min_(input1, input3))
25		2472.0		835		0.159		835		max_(input2, min_(input1, input3))
26		2239.0		835		0.162		835		max_(input2, min_(input1, input3))
27		2378.0		835		0.179		835		max_(input2, min_(input1, input3))
28		2472.0		835		0.165		835		max_(input2, min_(input1, input3))
29		2348.5		835		0.165		835		max_(input2, min_(input1, input3))
30		2472.0		835		0.17		835		max_(input2, min_(input1, input3))
31		2465.0		835		0.167		835		max_(input2, min_(input1, input3))
32		2454.5		835		0.166		835		max_(input2, min_(input1, input3))
33		2472.0		835		0.174		835		max_(input2, min_(input1, input3))
34		2387.5		835		0.187		835		max_(input2, min_(input1, input3))
35		2472.0		835		0.18		835		max_(input2, min_(input1, input3))
36		2472.0		835		0.182		835		max_(input2, min_(input1, input3))
37		2454.5		835		0.188		835		max_(input2, min_(input1, input3))
38		2222.5		835		0.198		835		max_(input2, min_(input1, input3))
39		2359.0		835		0.197		835		max_(input2, min_(input1, input3))
40		2465.0		835		0.204		835		max_(input2, min_(input1, input3))
41		2470.0		611		0.222		611		min_(max_(input2, min_(input1, input3)), abs_(input1))
42		2209.0		611		0.204		611		min_(max_(input2, min_(input1, input3)), abs_(input1))
43		1972.0		587		0.192		587		min_(max_(input2, min_(input1, input3)), abs_(input3))
44		1909.0		587		0.195		587		min_(max_(input2, min_(input1, input3)), abs_(input3))
45		1803.5		587		0.208		587		min_(max_(input2, min_(input1, input3)), abs_(input3))
46		1793.0		587		0.195		587		min_(max_(input2, min_(input1, input3)), abs_(input3))
47		1798.5		587		0.209		587		min_(max_(input2, min_(input1, input3)), abs_(input3))
48		2132.5		587		0.225		587		min_(max_(input2, min_(input1, input3)), abs_(input3))
49		2311.0		587		0.216		587		min_(max_(input2, min_(input1, input3)), abs_(input3))
50		2397.0		254		0.249		254		min_(max_(input2, min_(input1, print_tap(input3))), abs_(max_(max_(input3, float2int(input1)), 10)))
51		2472.0		0		0.238		0		min_(max_(input2, min_(input1, print_tap(input3))), max_(input3, input1))
Solution found.
def median(input1, input2, input3):
    return min_(max_(input2, min_(input1, print_tap(input3))), max_(input3, input1))

Simplifying genome of length 21.
Simplified genome: length=21 error=0
def median(input1, input2, input3):
    return min_(max_(input2, min_(input1, print_tap(input3))), max_(input3, input1))

[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 0]
Final Test Error: 0
