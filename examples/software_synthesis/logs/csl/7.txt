Gen		Median		MAD		Best		Div		Run Best		Code
1		3900052.5		34.0		0.061		34.0		input1.islower()
2		54.0		34.0		0.097		34.0		input1.islower()
3		56.0		29.0		0.144		29.0		not_(input3.isprintable())
4		71.0		29.0		0.169		29.0		not_(input3.isprintable())
5		77.0		29.0		0.201		29.0		not_(input3.isprintable())
6		73.0		27.0		0.217		27.0		not_(le(int2float(ne(input2, input3)), ge(input3.isprintable(), 0.6321302219999178)))
7		67.0		27.0		0.253		27.0		not_(le(int2float(ne(input2, input3)), ge(input3.isprintable(), 0.6321302219999178)))
8		62.0		27.0		0.258		27.0		not_(le(int2float(ne(input2, input3)), ge(input3.isprintable(), 0.6321302219999178)))
9		59.0		27.0		0.292		27.0		not_(le(int2float(ne(input2, input3)), ge(input3.isprintable(), 0.6321302219999178)))
10		59.0		27.0		0.295		27.0		not_(le(int2float(ne(input2, input3)), ge(input3.isprintable(), 0.6321302219999178)))
11		64.0		27.0		0.291		27.0		not_(le(int2float(ne(input2, input3)), ge(input3.isprintable(), 0.6321302219999178)))
12		58.0		27.0		0.307		27.0		not_(le(int2float(ne(input2, input3)), ge(input3.isprintable(), 0.6321302219999178)))
13		53.0		25.0		0.326		25.0		not_(mul(abs_(float2int(max_(str_(input2).isupper(), ge(input1.isprintable(), 0.6321302219999178)))), input2.strip(input3).swapcase()).isprintable())
14		52.0		25.0		0.338		25.0		not_(mul(abs_(float2int(max_(str_(input2).isupper(), ge(input1.isprintable(), 0.6321302219999178)))), input2.strip(input3).swapcase()).isprintable())
15		52.0		25.0		0.324		25.0		not_(mul(abs_(float2int(max_(str_(input2).isupper(), ge(input1.isprintable(), 0.6321302219999178)))), input2.strip(input3).swapcase()).isprintable())
16		51.0		25.0		0.318		25.0		not_(mul(abs_(float2int(max_(str_(input2).isupper(), ge(input1.isprintable(), 0.6321302219999178)))), input2.strip(input3).swapcase()).isprintable())
17		53.0		25.0		0.308		25.0		not_(mul(abs_(float2int(max_(str_(input2).isupper(), ge(input1.isprintable(), 0.6321302219999178)))), input2.strip(input3).swapcase()).isprintable())
18		50.0		25.0		0.302		25.0		not_(mul(abs_(float2int(max_(str_(input2).isupper(), ge(input1.isprintable(), 0.6321302219999178)))), input2.strip(input3).swapcase()).isprintable())
19		54.0		25.0		0.34		25.0		not_(mul(abs_(float2int(max_(str_(input2).isupper(), ge(input1.isprintable(), 0.6321302219999178)))), input2.strip(input3).swapcase()).isprintable())
20		49.0		22.0		0.302		22.0		int2bool(not_(not_(gt(len_(input3.lstrip_ws()), abs_(len_(add(input1, input1.capitalize())))))))
21		52.0		19.0		0.317		19.0		int2bool(not_(not_(gt(len_(input3.lstrip_ws()), abs_(abs_(add(len_(input1), 10)))))))
22		52.0		19.0		0.328		19.0		int2bool(not_(not_(gt(len_(input3.lstrip_ws()), abs_(abs_(add(len_(input1), 10)))))))
23		57.5		19.0		0.306		19.0		int2bool(not_(not_(gt(len_(input3.lstrip_ws()), abs_(abs_(add(len_(input1), 10)))))))
24		54.0		19.0		0.312		19.0		int2bool(not_(not_(gt(len_(input3.lstrip_ws()), abs_(abs_(add(len_(input1), 10)))))))
25		56.0		19.0		0.294		19.0		int2bool(not_(not_(gt(len_(input3.lstrip_ws()), abs_(abs_(add(len_(input1), 10)))))))
26		57.5		19.0		0.285		19.0		int2bool(not_(not_(gt(len_(input3.lstrip_ws()), abs_(abs_(add(len_(input1), 10)))))))
27		53.0		19.0		0.263		19.0		int2bool(not_(not_(gt(len_(input3.lstrip_ws()), abs_(abs_(add(len_(input1), 10)))))))
28		58.0		19.0		0.277		19.0		int2bool(not_(not_(gt(len_(input3.lstrip_ws()), abs_(abs_(add(len_(input1), 10)))))))
29		53.0		18.0		0.307		18.0		int2bool(not_(not_(gt(len_(input3.lstrip_ws()), abs_(add(len_(input1), add(10, 2)))))))
30		56.0		15.0		0.312		15.0		gt(print_tap(len_(input3.lstrip_ws())), abs_(sub(add(True, abs_(len_(input1))), min_(2, print_tap(-22)))))
31		59.0		15.0		0.319		15.0		gt(print_tap(len_(input3.lstrip_ws())), abs_(sub(add(True, abs_(len_(input1))), min_(2, print_tap(-22)))))
32		54.5		13.0		0.308		13.0		gt(print_tap(len_(input3.lstrip_ws())), sub(add(mul(True, abs_(neg(min_(len_(input1), 2)))), len_(print_tap(input1))), -22))
33		60.0		13.0		0.291		13.0		gt(print_tap(len_(input3.lstrip_ws())), sub(add(mul(True, abs_(neg(min_(len_(input1), 2)))), len_(print_tap(input1))), -22))
34		62.0		13.0		0.286		13.0		gt(print_tap(len_(input3.lstrip_ws())), sub(add(mul(True, abs_(neg(min_(len_(input1), 2)))), len_(print_tap(input1))), -22))
35		73.0		13.0		0.295		13.0		gt(print_tap(len_(input3.lstrip_ws())), sub(add(mul(True, abs_(neg(min_(len_(input1), 2)))), len_(print_tap(input1))), -22))
36		58.0		13.0		0.269		13.0		gt(print_tap(len_(input3.lstrip_ws())), sub(add(mul(True, abs_(neg(min_(len_(input1), 2)))), len_(print_tap(input1))), -22))
37		72.0		13.0		0.254		13.0		gt(print_tap(len_(input3.lstrip_ws())), sub(add(mul(True, abs_(neg(min_(len_(input1), 2)))), len_(print_tap(input1))), -22))
38		61.5		13.0		0.284		13.0		gt(print_tap(len_(input3.lstrip_ws())), sub(add(mul(True, abs_(neg(min_(len_(input1), 2)))), len_(print_tap(input1))), -22))
39		73.0		13.0		0.269		13.0		gt(print_tap(len_(input3.lstrip_ws())), sub(add(mul(True, abs_(neg(min_(len_(input1), 2)))), len_(print_tap(input1))), -22))
40		70.0		13.0		0.281		13.0		gt(print_tap(len_(input3.lstrip_ws())), sub(add(mul(True, abs_(neg(min_(len_(input1), 2)))), len_(print_tap(input1))), -22))
41		73.0		13.0		0.269		13.0		gt(print_tap(len_(input3.lstrip_ws())), sub(add(mul(True, abs_(neg(min_(len_(input1), 2)))), len_(print_tap(input1))), -22))
42		72.0		13.0		0.269		13.0		gt(print_tap(len_(input3.lstrip_ws())), sub(add(mul(True, abs_(neg(min_(len_(input1), 2)))), len_(print_tap(input1))), -22))
43		73.0		13.0		0.261		13.0		gt(print_tap(len_(input3.lstrip_ws())), sub(add(mul(True, abs_(neg(min_(len_(input1), 2)))), len_(print_tap(input1))), -22))
44		72.0		13.0		0.278		13.0		gt(print_tap(len_(input3.lstrip_ws())), sub(add(mul(True, abs_(neg(min_(len_(input1), 2)))), len_(print_tap(input1))), -22))
45		72.0		13.0		0.273		13.0		gt(print_tap(len_(input3.lstrip_ws())), sub(add(mul(True, abs_(neg(min_(len_(input1), 2)))), len_(print_tap(input1))), -22))
46		71.5		13.0		0.267		13.0		gt(print_tap(len_(input3.lstrip_ws())), sub(add(mul(True, abs_(neg(min_(len_(input1), 2)))), len_(print_tap(input1))), -22))
47		73.0		13.0		0.274		13.0		gt(print_tap(len_(input3.lstrip_ws())), sub(add(mul(True, abs_(neg(min_(len_(input1), 2)))), len_(print_tap(input1))), -22))
48		73.0		11.0		0.253		11.0		gt(len_(input3.title().lstrip_ws()), pos(max_(len_(print_tap(input2)), pos(pos(mul(len_(input1), 2))))))
49		73.0		11.0		0.246		11.0		gt(len_(input3.title().lstrip_ws()), pos(max_(len_(print_tap(input2)), pos(pos(mul(len_(input1), 2))))))
50		73.0		11.0		0.252		11.0		gt(len_(input3.title().lstrip_ws()), pos(max_(len_(print_tap(input2)), pos(pos(mul(len_(input1), 2))))))
51		73.0		11.0		0.273		11.0		gt(len_(input3.title().lstrip_ws()), pos(max_(len_(print_tap(input2)), pos(pos(mul(len_(input1), 2))))))
52		73.0		11.0		0.268		11.0		gt(len_(input3.title().lstrip_ws()), pos(max_(len_(print_tap(input2)), pos(pos(mul(len_(input1), 2))))))
53		73.0		11.0		0.248		11.0		gt(len_(input3.title().lstrip_ws()), pos(max_(len_(print_tap(input2)), pos(pos(mul(len_(input1), 2))))))
54		73.0		11.0		0.263		11.0		gt(len_(input3.title().lstrip_ws()), pos(max_(len_(print_tap(input2)), pos(pos(mul(len_(input1), 2))))))
55		73.0		11.0		0.247		11.0		gt(len_(input3.title().lstrip_ws()), pos(max_(len_(print_tap(input2)), pos(pos(mul(len_(input1), 2))))))
56		66.0		11.0		0.251		11.0		gt(len_(input3.title().lstrip_ws()), pos(max_(len_(print_tap(input2)), pos(pos(mul(len_(input1), 2))))))
57		69.0		11.0		0.263		11.0		gt(len_(input3.title().lstrip_ws()), pos(max_(len_(print_tap(input2)), pos(pos(mul(len_(input1), 2))))))
58		72.0		11.0		0.256		11.0		gt(len_(input3.title().lstrip_ws()), pos(max_(len_(print_tap(input2)), pos(pos(mul(len_(input1), 2))))))
59		61.0		11.0		0.261		11.0		gt(len_(input3.title().lstrip_ws()), pos(max_(len_(print_tap(input2)), pos(pos(mul(len_(input1), 2))))))
60		71.0		11.0		0.254		11.0		gt(len_(input3.title().lstrip_ws()), pos(max_(len_(print_tap(input2)), pos(pos(mul(len_(input1), 2))))))
61		73.0		11.0		0.261		11.0		gt(len_(input3.title().lstrip_ws()), pos(max_(len_(print_tap(input2)), pos(pos(mul(len_(input1), 2))))))
62		73.0		11.0		0.281		11.0		gt(len_(input3.title().lstrip_ws()), pos(max_(len_(print_tap(input2)), pos(pos(mul(len_(input1), 2))))))
63		73.0		11.0		0.276		11.0		gt(len_(input3.title().lstrip_ws()), pos(max_(len_(print_tap(input2)), pos(pos(mul(len_(input1), 2))))))
64		75.5		11.0		0.281		11.0		gt(len_(input3.title().lstrip_ws()), pos(max_(len_(print_tap(input2)), pos(pos(mul(len_(input1), 2))))))
65		71.0		11.0		0.298		11.0		gt(len_(input3.title().lstrip_ws()), pos(max_(len_(print_tap(input2)), pos(pos(mul(len_(input1), 2))))))
66		69.0		11.0		0.293		11.0		gt(len_(input3.title().lstrip_ws()), pos(max_(len_(print_tap(input2)), pos(pos(mul(len_(input1), 2))))))
67		73.0		11.0		0.297		11.0		gt(len_(input3.title().lstrip_ws()), pos(max_(len_(print_tap(input2)), pos(pos(mul(len_(input1), 2))))))
68		71.0		11.0		0.299		11.0		gt(len_(input3.title().lstrip_ws()), pos(max_(len_(print_tap(input2)), pos(pos(mul(len_(input1), 2))))))
69		55.0		11.0		0.329		11.0		gt(len_(input3.title().lstrip_ws()), pos(max_(len_(print_tap(input2)), pos(pos(mul(len_(input1), 2))))))
70		66.0		11.0		0.329		11.0		gt(len_(input3.title().lstrip_ws()), pos(max_(len_(print_tap(input2)), pos(pos(mul(len_(input1), 2))))))
71		70.5		11.0		0.332		11.0		gt(len_(input3.title().lstrip_ws()), pos(max_(len_(print_tap(input2)), pos(pos(mul(len_(input1), 2))))))
72		72.0		11.0		0.31		11.0		gt(len_(input3.title().lstrip_ws()), pos(max_(len_(print_tap(input2)), pos(pos(mul(len_(input1), 2))))))
73		72.0		11.0		0.312		11.0		gt(len_(input3.title().lstrip_ws()), pos(max_(len_(print_tap(input2)), pos(pos(mul(len_(input1), 2))))))
74		72.0		11.0		0.323		11.0		gt(len_(input3.title().lstrip_ws()), pos(max_(len_(print_tap(input2)), pos(pos(mul(len_(input1), 2))))))
75		65.0		11.0		0.309		11.0		gt(len_(input3.title().lstrip_ws()), pos(max_(len_(print_tap(input2)), pos(pos(mul(len_(input1), 2))))))
76		71.0		11.0		0.311		11.0		gt(len_(input3.title().lstrip_ws()), pos(max_(len_(print_tap(input2)), pos(pos(mul(len_(input1), 2))))))
77		54.0		11.0		0.307		11.0		gt(len_(input3.title().lstrip_ws()), pos(max_(len_(print_tap(input2)), pos(pos(mul(len_(input1), 2))))))
78		60.0		11.0		0.313		11.0		gt(len_(input3.title().lstrip_ws()), pos(max_(len_(print_tap(input2)), pos(pos(mul(len_(input1), 2))))))
79		69.0		11.0		0.314		11.0		gt(len_(input3.title().lstrip_ws()), pos(max_(len_(print_tap(input2)), pos(pos(mul(len_(input1), 2))))))
80		70.0		11.0		0.305		11.0		gt(len_(input3.title().lstrip_ws()), pos(max_(len_(print_tap(input2)), pos(pos(mul(len_(input1), 2))))))
81		71.0		11.0		0.342		11.0		gt(len_(input3.title().lstrip_ws()), pos(max_(len_(print_tap(input2)), pos(pos(mul(len_(input1), 2))))))
82		73.0		11.0		0.328		11.0		gt(len_(input3.title().lstrip_ws()), pos(max_(len_(print_tap(input2)), pos(pos(mul(len_(input1), 2))))))
83		74.0		11.0		0.314		11.0		gt(len_(input3.title().lstrip_ws()), pos(max_(len_(print_tap(input2)), pos(pos(mul(len_(input1), 2))))))
84		73.0		11.0		0.325		11.0		gt(len_(input3.title().lstrip_ws()), pos(max_(len_(print_tap(input2)), pos(pos(mul(len_(input1), 2))))))
85		71.0		11.0		0.342		11.0		gt(len_(input3.title().lstrip_ws()), pos(max_(len_(print_tap(input2)), pos(pos(mul(len_(input1), 2))))))
86		72.0		11.0		0.303		11.0		gt(len_(input3.title().lstrip_ws()), pos(max_(len_(print_tap(input2)), pos(pos(mul(len_(input1), 2))))))
87		72.0		11.0		0.313		11.0		gt(len_(input3.title().lstrip_ws()), pos(max_(len_(print_tap(input2)), pos(pos(mul(len_(input1), 2))))))
88		77.0		11.0		0.298		11.0		gt(len_(input3.title().lstrip_ws()), pos(max_(len_(print_tap(input2)), pos(pos(mul(len_(input1), 2))))))
89		73.0		11.0		0.32		11.0		gt(len_(input3.title().lstrip_ws()), pos(max_(len_(print_tap(input2)), pos(pos(mul(len_(input1), 2))))))
90		61.0		11.0		0.338		11.0		gt(len_(input3.title().lstrip_ws()), pos(max_(len_(print_tap(input2)), pos(pos(mul(len_(input1), 2))))))
91		47.0		11.0		0.325		11.0		gt(len_(input3.title().lstrip_ws()), pos(max_(len_(print_tap(input2)), pos(pos(mul(len_(input1), 2))))))
92		47.0		10.0		0.301		10.0		gt(len_(input3), add(add(max_(10, len_(input1.replace_all(input3, input2))), mul(2, 10)), 0))
93		53.0		10.0		0.302		10.0		gt(len_(input3), add(add(max_(10, len_(input1.replace_all(input3, input2))), mul(2, 10)), 0))
94		64.0		10.0		0.324		10.0		gt(len_(input3), add(add(max_(10, len_(input1.replace_all(input3, input2))), mul(2, 10)), 0))
95		47.0		10.0		0.315		10.0		gt(len_(input3), add(add(max_(10, len_(input1.replace_all(input3, input2))), mul(2, 10)), 0))
96		53.0		10.0		0.331		10.0		gt(len_(input3), add(add(max_(10, len_(input1.replace_all(input3, input2))), mul(2, 10)), 0))
97		43.0		8.0		0.325		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
98		58.0		8.0		0.323		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
99		63.0		8.0		0.358		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
100		51.0		8.0		0.343		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
101		46.5		8.0		0.323		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
102		52.0		8.0		0.332		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
103		52.5		8.0		0.358		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
104		47.0		8.0		0.335		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
105		42.0		8.0		0.385		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
106		44.5		8.0		0.35		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
107		40.0		8.0		0.338		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
108		43.0		8.0		0.379		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
109		42.5		8.0		0.359		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
110		42.0		8.0		0.367		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
111		47.0		8.0		0.358		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
112		48.0		8.0		0.346		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
113		46.0		8.0		0.359		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
114		58.0		8.0		0.351		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
115		44.0		8.0		0.338		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
116		46.0		8.0		0.39		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
117		50.5		8.0		0.384		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
118		58.5		8.0		0.37		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
119		42.0		8.0		0.348		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
120		52.5		8.0		0.375		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
121		58.0		8.0		0.378		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
122		50.0		8.0		0.363		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
123		53.0		8.0		0.37		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
124		57.0		8.0		0.36		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
125		49.0		8.0		0.345		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
126		46.5		8.0		0.37		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
127		42.0		8.0		0.378		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
128		49.0		8.0		0.391		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
129		51.5		8.0		0.374		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
130		47.0		8.0		0.396		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
131		43.0		8.0		0.37		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
132		49.0		8.0		0.393		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
133		52.0		8.0		0.386		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
134		56.5		8.0		0.381		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
135		58.0		8.0		0.358		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
136		61.0		8.0		0.375		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
137		47.0		8.0		0.396		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
138		49.5		8.0		0.381		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
139		72.0		8.0		0.39		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
140		44.0		8.0		0.362		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
141		65.0		8.0		0.366		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
142		53.0		8.0		0.369		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
143		45.0		8.0		0.358		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
144		42.0		8.0		0.376		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
145		53.0		8.0		0.344		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
146		46.0		8.0		0.352		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
147		42.0		8.0		0.338		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
148		42.5		8.0		0.346		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
149		43.0		8.0		0.363		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
150		43.0		8.0		0.369		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
151		44.0		8.0		0.39		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
152		44.0		8.0		0.368		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
153		50.0		8.0		0.372		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
154		47.0		8.0		0.383		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
155		45.0		8.0		0.335		8.0		le(input3.isprintable(), mod(-1, floordiv(len_(input3), add(True, sub(len_(input2), sub(len_(input1), neg(pos(div(1, 0.2820609593765492)))))))))
156		45.0		7.0		0.345		7.0		lt(input2.isnumeric(), float2bool(floordiv(len_(input3), max_(len_(input2), mul(len_(input1), add(max_(println_tap(2), mod(input3.strip_ws().isnumeric(), lt(False, -1))), pos(sub(min_(bool2float(input1.lower().isidentifier()), println_tap(2)), abs_(print_tap(println_tap(println_tap(0.2820609593765492))))))))))))
157		63.0		7.0		0.329		7.0		lt(input2.isnumeric(), float2bool(floordiv(len_(input3), max_(len_(input2), mul(len_(input1), add(max_(println_tap(2), mod(input3.strip_ws().isnumeric(), lt(False, -1))), pos(sub(min_(bool2float(input1.lower().isidentifier()), println_tap(2)), abs_(print_tap(println_tap(println_tap(0.2820609593765492))))))))))))
158		48.0		7.0		0.359		7.0		lt(input2.isnumeric(), float2bool(floordiv(len_(input3), max_(len_(input2), mul(len_(input1), add(max_(println_tap(2), mod(input3.strip_ws().isnumeric(), lt(False, -1))), pos(sub(min_(bool2float(input1.lower().isidentifier()), println_tap(2)), abs_(print_tap(println_tap(println_tap(0.2820609593765492))))))))))))
159		62.5		7.0		0.329		7.0		lt(input2.isnumeric(), float2bool(floordiv(len_(input3), max_(len_(input2), mul(len_(input1), add(max_(println_tap(2), mod(input3.strip_ws().isnumeric(), lt(False, -1))), pos(sub(min_(bool2float(input1.lower().isidentifier()), println_tap(2)), abs_(print_tap(println_tap(println_tap(0.2820609593765492))))))))))))
160		52.5		7.0		0.352		7.0		lt(input2.isnumeric(), float2bool(floordiv(len_(input3), max_(len_(input2), mul(len_(input1), add(max_(println_tap(2), mod(input3.strip_ws().isnumeric(), lt(False, -1))), pos(sub(min_(bool2float(input1.lower().isidentifier()), println_tap(2)), abs_(print_tap(println_tap(println_tap(0.2820609593765492))))))))))))
161		60.5		8.0		0.37		7.0		lt(input2.isnumeric(), float2bool(floordiv(len_(input3), max_(len_(input2), mul(len_(input1), add(max_(println_tap(2), mod(input3.strip_ws().isnumeric(), lt(False, -1))), pos(sub(min_(bool2float(input1.lower().isidentifier()), println_tap(2)), abs_(print_tap(println_tap(println_tap(0.2820609593765492))))))))))))
162		65.5		8.0		0.372		7.0		lt(input2.isnumeric(), float2bool(floordiv(len_(input3), max_(len_(input2), mul(len_(input1), add(max_(println_tap(2), mod(input3.strip_ws().isnumeric(), lt(False, -1))), pos(sub(min_(bool2float(input1.lower().isidentifier()), println_tap(2)), abs_(print_tap(println_tap(println_tap(0.2820609593765492))))))))))))
163		62.0		8.0		0.362		7.0		lt(input2.isnumeric(), float2bool(floordiv(len_(input3), max_(len_(input2), mul(len_(input1), add(max_(println_tap(2), mod(input3.strip_ws().isnumeric(), lt(False, -1))), pos(sub(min_(bool2float(input1.lower().isidentifier()), println_tap(2)), abs_(print_tap(println_tap(println_tap(0.2820609593765492))))))))))))
164		45.5		8.0		0.354		7.0		lt(input2.isnumeric(), float2bool(floordiv(len_(input3), max_(len_(input2), mul(len_(input1), add(max_(println_tap(2), mod(input3.strip_ws().isnumeric(), lt(False, -1))), pos(sub(min_(bool2float(input1.lower().isidentifier()), println_tap(2)), abs_(print_tap(println_tap(println_tap(0.2820609593765492))))))))))))
165		55.0		8.0		0.352		7.0		lt(input2.isnumeric(), float2bool(floordiv(len_(input3), max_(len_(input2), mul(len_(input1), add(max_(println_tap(2), mod(input3.strip_ws().isnumeric(), lt(False, -1))), pos(sub(min_(bool2float(input1.lower().isidentifier()), println_tap(2)), abs_(print_tap(println_tap(println_tap(0.2820609593765492))))))))))))
166		54.0		8.0		0.335		7.0		lt(input2.isnumeric(), float2bool(floordiv(len_(input3), max_(len_(input2), mul(len_(input1), add(max_(println_tap(2), mod(input3.strip_ws().isnumeric(), lt(False, -1))), pos(sub(min_(bool2float(input1.lower().isidentifier()), println_tap(2)), abs_(print_tap(println_tap(println_tap(0.2820609593765492))))))))))))
167		67.0		8.0		0.342		7.0		lt(input2.isnumeric(), float2bool(floordiv(len_(input3), max_(len_(input2), mul(len_(input1), add(max_(println_tap(2), mod(input3.strip_ws().isnumeric(), lt(False, -1))), pos(sub(min_(bool2float(input1.lower().isidentifier()), println_tap(2)), abs_(print_tap(println_tap(println_tap(0.2820609593765492))))))))))))
168		65.5		6.0		0.353		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
169		72.0		6.0		0.356		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
170		53.0		6.0		0.379		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
171		73.0		6.0		0.358		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
172		56.0		6.0		0.348		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
173		70.5		6.0		0.374		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
174		62.0		6.0		0.354		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
175		59.0		6.0		0.413		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
176		65.5		6.0		0.404		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
177		59.0		6.0		0.386		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
178		49.0		6.0		0.444		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
179		43.0		6.0		0.42		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
180		61.0		6.0		0.393		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
181		55.5		6.0		0.378		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
182		48.0		6.0		0.369		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
183		42.0		6.0		0.368		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
184		45.0		6.0		0.356		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
185		45.0		6.0		0.373		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
186		44.0		6.0		0.377		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
187		49.5		6.0		0.338		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
188		42.0		6.0		0.379		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
189		43.0		6.0		0.368		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
190		42.0		6.0		0.388		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
191		59.0		6.0		0.361		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
192		62.0		6.0		0.385		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
193		73.0		6.0		0.361		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
194		67.0		6.0		0.376		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
195		50.0		6.0		0.413		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
196		62.5		6.0		0.387		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
197		62.0		6.0		0.375		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
198		58.0		6.0		0.374		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
199		69.5		6.0		0.39		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
200		67.0		6.0		0.411		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
201		67.0		6.0		0.393		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
202		54.5		6.0		0.426		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
203		44.0		6.0		0.421		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
204		48.5		6.0		0.444		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
205		44.0		6.0		0.411		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
206		61.0		6.0		0.424		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
207		55.0		6.0		0.408		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
208		60.0		6.0		0.421		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
209		56.0		6.0		0.374		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
210		55.0		6.0		0.372		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
211		63.0		6.0		0.383		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
212		62.0		6.0		0.427		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
213		44.5		6.0		0.428		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
214		62.0		6.0		0.416		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
215		54.5		6.0		0.405		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
216		60.5		6.0		0.411		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
217		54.0		6.0		0.42		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
218		63.0		6.0		0.38		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
219		58.0		6.0		0.384		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
220		61.0		6.0		0.382		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
221		56.5		6.0		0.344		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
222		67.0		6.0		0.345		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
223		62.5		6.0		0.396		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
224		67.0		6.0		0.362		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
225		67.0		6.0		0.324		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
226		66.0		6.0		0.347		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
227		49.5		6.0		0.34		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
228		49.5		6.0		0.346		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
229		46.0		6.0		0.37		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
230		42.5		6.0		0.386		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
231		61.0		6.0		0.371		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
232		38.0		6.0		0.373		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
233		52.0		6.0		0.368		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
234		40.0		6.0		0.365		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
235		51.0		6.0		0.398		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
236		53.0		6.0		0.406		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
237		54.0		6.0		0.369		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
238		53.0		6.0		0.371		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
239		53.0		6.0		0.386		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
240		54.0		6.0		0.395		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
241		54.0		6.0		0.375		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
242		53.0		6.0		0.367		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
243		50.0		6.0		0.355		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
244		42.0		6.0		0.378		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
245		45.0		6.0		0.364		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
246		45.5		6.0		0.367		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
247		49.0		6.0		0.348		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
248		42.0		6.0		0.361		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
249		54.0		6.0		0.335		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
250		53.0		6.0		0.316		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
251		40.0		6.0		0.345		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
252		49.0		6.0		0.316		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
253		40.0		6.0		0.347		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
254		45.0		6.0		0.347		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
255		44.5		6.0		0.329		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
256		47.0		6.0		0.367		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
257		41.0		6.0		0.35		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
258		40.0		6.0		0.362		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
259		40.0		6.0		0.343		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
260		40.0		6.0		0.335		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
261		40.0		6.0		0.333		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
262		41.0		6.0		0.33		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
263		45.0		6.0		0.341		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
264		54.0		6.0		0.349		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
265		40.0		6.0		0.348		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
266		46.5		6.0		0.365		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
267		56.5		6.0		0.327		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
268		51.5		6.0		0.32		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
269		48.0		6.0		0.321		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
270		49.0		6.0		0.351		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
271		54.0		6.0		0.343		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
272		61.5		6.0		0.35		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
273		52.0		6.0		0.367		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
274		47.0		6.0		0.359		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
275		42.0		6.0		0.363		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
276		62.0		6.0		0.358		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
277		55.0		6.0		0.357		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
278		54.0		6.0		0.357		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
279		44.0		6.0		0.332		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
280		55.0		6.0		0.333		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
281		56.5		6.0		0.359		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
282		42.0		6.0		0.354		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
283		43.0		6.0		0.341		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
284		55.0		6.0		0.364		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
285		40.0		6.0		0.338		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
286		39.5		6.0		0.378		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
287		40.0		6.0		0.395		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
288		41.0		6.0		0.383		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
289		42.0		6.0		0.391		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
290		37.0		6.0		0.365		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
291		38.5		6.0		0.368		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
292		44.0		6.0		0.364		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
293		40.0		6.0		0.345		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
294		38.0		6.0		0.335		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
295		42.0		6.0		0.383		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
296		40.0		6.0		0.364		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
297		41.0		6.0		0.351		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
298		40.0		6.0		0.36		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
299		40.0		6.0		0.353		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
300		42.0		6.0		0.374		6.0		lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))
No solution found.
def compare_string_lengths(input1, input2, input3):
    return lt(input1.count(print_tap(input2.capitalize())), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(True, abs_(min_(le(div(mul(-1, input3).isupper(), not_(int2bool(10))), print_tap(1)), 0.2820609593765492))))))))

Simplifying genome of length 85.
Simplified to length 84.
Simplified to length 77.
Simplified to length 63.
Simplified to length 62.
Simplified to length 58.
Simplified to length 56.
Simplified to length 55.
Simplified to length 54.
Simplified to length 52.
Simplified to length 51.
Simplified to length 50.
Simplified to length 49.
Simplified to length 47.
Simplified to length 46.
Simplified to length 44.
Simplified to length 41.
Simplified to length 40.
Simplified to length 37.
Simplified to length 36.
Simplified to length 34.
Simplified to length 33.
Simplified to length 32.
Simplified to length 31.
Simplified to length 30.
Simplified to length 29.
Simplified to length 28.
Simplified to length 27.
Simplified to length 26.
Simplified to length 25.
Simplified to length 24.
Simplified to length 23.
Simplified to length 22.
Simplified to length 20.
Simplified to length 18.
Simplified genome: length=18 error=6.0
def compare_string_lengths(input1, input2, input3):
    return lt(input1.count(input2), gt(len_(input3), max_(len_(input2), mul(len_(input1), add(1, sub(1, 0.2820609593765492))))))

[0. 0. 0. ... 0. 0. 1.]
Final Test Error: 92.0
